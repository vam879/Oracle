create table customer(
    C_ID    VARCHAR(14) NOT NULL,
    C_NAME  VARCHAR(20) NOT NULL,
    C_TYPE  INT NOT NULL,
    C_HP    VARCHAR(14) NOT NULL,
    C_ADDR  VARCHAR(100) NULL,
    PRIMARY KEY (C_ID),
    CONSTRAINT UC_C_HP UNIQUE (C_HP)
);
create table account (
    ACC_NO      CHAR(11) NOT NULL PRIMARY KEY,
    ACC_TYPE    CHAR(2) NOT NULL,
    ACC_NAME    VARCHAR(20) NOT NULL,
    ACC_CID     VARCHAR(14) NOT NULL,
    ACC_BALANCE NUMBER DEFAULT 0,
    ACC_DATE DATE NOT NULL,
    FOREIGN KEY (ACC_CID) REFERENCES CUSTOMER (C_ID)
);

create table transaction (
    TR_NO       NUMBER DEFAULT 0 PRIMARY KEY,
    TR_ACC      CHAR(11) NOT NULL,
    TR_TYPE     NUMBER(1) NOT NULL,
    TR_AMOUNT   NUMBER DEFAULT 0,
    TR_DATE     DATE NOT NULL
);

//실습 3-3

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('730423-1000001', '김유신', 1, '010-1234-1001', '경기도 수원시');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('750210-1000002', '김춘추', 1, '010-1234-1002', '경기도 광주시');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('830513-2000003', '선덕여왕', 1, '010-1234-1003', '서울시 마포구');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('870830-1000004', '강감찬', 1, '010-1234-1004', '서울시 영등포구');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('910913-2000005', '신사임당', 1, '010-1234-1005', '강원도 강릉시');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('941127-1000006', '이순신', 1, '010-1234-1006', '부산시 영도구');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('220-83-52237', '(주)한국전산', 2, '03-1234-1045', '서울시 강서구');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('361-23-42687', '(주)정보산업', 2, '031-563-1253', '경기도 광명시');

INSERT INTO customer (C_ID, C_NAME, C_TYPE, C_HP, C_ADDR)
VALUES ('103-23-51094', '부산의원', 2, '051-518-1010', '부산시 남구');

//
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-11-1001', 'S1', '자유저축예금', '730423-1000001', 420000, TO_TIMESTAMP('2005-07-21 12:10:03', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-13-1002', 'S2', '정기적립예금', '830513-2000003', 1020000, TO_TIMESTAMP('2011-05-13 13:20:12', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-11-1003', 'S1', '자유저축예금', '870830-1000004', 53000, TO_TIMESTAMP('2007-03-17 21:54:06', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-21-1004', 'L1', '고객신용대출', '910913-2000005', 1200500, TO_TIMESTAMP('2009-08-25 14:34:57', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-13-1005', 'S3', '주택청약예금', '941127-1000006', 720800, TO_TIMESTAMP('2013-10-15 19:56:34', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-23-1006', 'L2', '예금담보대출', '730423-1000001', 250000, TO_TIMESTAMP('2013-12-11 18:14:22', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-23-1007', 'L2', '주택담보대출', '750210-1000002', 2700000, TO_TIMESTAMP('2020-09-23 09:19:13', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-11-2001', 'S1', '자유저축예금', '220-83-52237', 23000000, TO_TIMESTAMP('2003-04-14 11:02:43', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-11-2002', 'S1', '자유저축예금', '361-23-42687', 4201000, TO_TIMESTAMP('2008-12-30 12:32:59', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO ACCOUNT (ACC_NO, ACC_TYPE,ACC_NAME,ACC_CID, ACC_BALANCE, ACC_DATE)
VALUES ('101-11-2003', 'S1', '자유저축예금', '103-23-51094', 8325010, TO_TIMESTAMP('2010-06-07 15:47:04', 'YYYY-MM-DD HH24:MI:SS'));
//

INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(1, '101-11-1001', 1, 50000, TO_TIMESTAMP('2025-07-12 13:55:31', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(2, '101-11-1003', 1, 120000, TO_TIMESTAMP('2025-07-12 14:15:22', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(3, '101-11-2001', 2, 300000, TO_TIMESTAMP('2025-07-19 17:53:42', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(4, '101-13-1002', 1, 1000000, TO_TIMESTAMP('2025-07-20 07:25:08', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(5, '101-11-1001', 0, 0, TO_TIMESTAMP('2025-07-20 09:21:13', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(6, '101-13-1005', 1, 200000, TO_TIMESTAMP('2025-07-20 10:15:02', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(7, '101-11-1001', 1, 450000, TO_TIMESTAMP('2025-07-20 11:34:42', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(8, '101-11-2002', 2, 32000, TO_TIMESTAMP('2025-07-21 09:12:37', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(9, '101-11-2003', 0, 0, TO_TIMESTAMP('2025-07-21 16:02:31', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO transaction (TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES(10, '101-11-1003', 2, 75000, TO_TIMESTAMP('2025-07-21 17:41:11', 'YYYY-MM-DD HH24:MI:SS'));

//3-4
SELECT * FROM ACCOUNT;

//3-5
SELECT * FROM CUSTOMER;

//3-6
SELECT * FROM TRANSACTION;

//3-7
SELECT C_NAME, C_ID
FROM CUSTOMER;

//3-8
SELECT ACC_TYPE, ACC_NAME
FROM ACCOUNT;

//3-9
SELECT DISTINCT ACC_TYPE, ACC_NAME
FROM ACCOUNT;
//3-10
SELECT *
FROM ACCOUNT
WHERE ACC_NAME = '자유저축예금'
    AND ACC_BALANCE >= 1000000;
//3-11
SELECT *
FROM CUSTOMER
WHERE C_ADDR LIKE '%경기도%';
//3-12
SELECT *
FROM CUSTOMER
WHERE C_TYPE =2;

//3-13
SELECT *
FROM TRANSACTION
WHERE TR_TYPE =1;

//3-14
SELECT *
FROM TRANSACTION
WHERE TR_TYPE = 2
ORDER BY TR_AMOUNT DESC;

//3-15
SELECT
    SUM(TR_AMOUNT) AS TOTAL_DEPOSIT_AMOUNT,
    AVG(TR_AMOUNT) AS AVERAGE_DEPOSIT_AMOUNT
FROM TRANSACTION
WHERE TR_TYPE = 1;

//3-16
SELECT
    MAX(TR_AMOUNT) AS MAX_WITHDRAWAL_AMOUNT,
    MIN(TR_AMOUNT) AS MIN_WITHDRAWAL_AMOUNT
FROM TRANSACTION
WHERE TR_TYPE = 2;

//3-17
SELECT ACC_NO, ACC_NAME, ACC_BALANCE
FROM ACCOUNT
WHERE ACC_NAME = '자유저축예금'
    AND ACC_BALANCE >= 1000000
ORDER BY ACC_BALANCE DESC;

//3-18
SELECT ACC_NO, ACC_NAME, ACC_BALANCE
FROM ACCOUNT
WHERE ACC_NAME = '자유저축예금'
ORDER BY ACC_BALANCE DESC
FETCH FIRST 1 ROWS ONLY;

//3-19
SELECT TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE
FROM TRANSACTION
WHERE TR_TYPE = 1
ORDER BY TR_AMOUNT DESC;
SELECT TR_NO, TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE
FROM TRANSACTION
WHERE TR_TYPE = 2
ORDER BY TR_AMOUNT DESC;

//3-20
SELECT
    COUNT(CASE WHEN TR_TYPE = 3 THEN 1 END) AS "조회 건수",
    COUNT(CASE WHEN TR_TYPE = 1 THEN 1 END) AS "입금 건수",
    COUNT(CASE WHEN TR_TYPE = 2 THEN 1 END) AS "출금 건수"
FROM TRANSACTION;

//3-21
SELECT
    TY_TYPE,
    CASE
        WHEN TR_TYPE = 1 THEN '입금'
        WHEN TR_TYPE = 2 THEN '출금'
        WHEN TR_TYPE = 0 THEN '조회'
        ELSE '기타'
    END AS '거래종류',
    TR_ACC,
    TR_AMOUNT
FROM TRANSACTION;
//3-22
SELECT tr_type, COUNT(tr_no) FROM TRANSACTION
GROUP BY TR_TYPE;

//3-23
SELECT
    TR_ACC,
    TR_TYPE,
    SUM(TR_AMOUNT) AS 합계
FROM TRANSACTION
WHERE       TR_TYPE = 1       
GROUP BY    TR_ACC
HAVING      SUM(TR_AMOUNT) >= 100000
ORDER BY    합계 DESC;

//3-24
SELECT
    TR_ACC,
    COUNT(*) AS 거래건수,
    SUM(TR_AMOUNT) AS 총거래금액
FROM TRANSACTION
WHERE       TR_TYPE IN (1, 2)
GROUP BY    TR_ACC
HAVING      SUM(TR_AMOUNT) >= 100000
ORDER BY    총거래금액 DESC
OFFSET 1 ROWS FETCH NEXT 2 ROWS ONLY;
//3-25
SELECT
    ACC_NO,
    ACC_NAME,
    C_ID,
    C_NAME,
    ACC_BALANCE,
    ACC_DATE
FROM ACOOUNT A
JOIN CUSTOMER C
ON A.ACC_CID = C.C_ID;
//3-26
SELECT
    ACC_NO AS 계좌번호
    ACC_NAME AS 계좌이름
    C_ID AS "주민번호(사업자번호)"
    C_NAME AS 고객명
    ACC_BALANCE AS 현재잔액
FROM ACOOUNT A
JOIN CUSTOMER C
ON A.ACC_CID = C.C_ID;
WHERE ACC_BALANCE >= 1000000
ORDER BY ACC_BALANCE DESC;

//3-27
SELECT
    T.TR_NO,
    T.TR_ACC,
    A.ACC_CID,
    T.TR_TYPE,
    T.TR_AMOUNT,
    T.TR_DATE
FROM 
    TRANSACTION T
JOIN 
    ACCOUNT A ON T.TR_ACC = A.ACC_NO;
//3-28
SELECT
    a.acc_no,
    c.C_NAME,
    SUM(CASE WHEN t.TR_TYPE = 1 THEN t.TR_AMOUNT ELSE 0 END) AS 총입금액,  
    SUM(CASE WHEN t.TR_TYPE = 2 THEN t.TR_AMOUNT ELSE 0 END) AS 총출금액  
FROM TRANSACTION t
JOIN ACCOUNT a ON t.TR_ACC = a.ACC_NO   
JOIN CUSTOMER c ON a.ACC_CID = c.C_ID   
WHERE c.C_TYPE = 1 
GROUP BY a.acc_no, c.C_NAME
//3-29
SELECT
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    c.C_NAME,
    a.ACC_BALANCE +
        SUM(CASE WHEN t.TR_TYPE = 001 THEN t.TR_AMOUNT ELSE 0 END) -
        SUM(CASE WHEN t.TR_TYPE = 002 THEN t.TR_AMOUNT ELSE 0 END) AS 최종잔액

FROM
    ACCOUNT a
LEFT JOIN
    TRANSACTION t ON a.ACC_NO = t.TR_ACC
JOIN
    CUSTOMER c ON a.ACC_CID = c.C_ID
WHERE
    C_TYPE = 1
GROUP BY
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    a.ACC_BALANCE,
    c.C_NAME
ORDER BY
    a.ACC_NO;

//3-30
SELECT
    c.C_NAME,
    a.ACC_NO,
    t.TOTAL_DEPOSIT,
    c.C_ADDR
FROM
    ACCOUNT a
    JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
    JOIN (
        SELECT
            TR_ACC,
            SUM(TR_AMOUNT) AS TOTAL_DEPOSIT
    FROM TRANSACTION
    WHERE TR_TYPE = 1
    GROUP BY TR_ACC
    ) t ON a.ACC_NO = t.TR_ACC
WHERE
    t.TOTAL_DEPOSIT = (
        SELECT
            MAX(SUM_AMOUNT)
        FROM (
            SELECT
                TR_ACC,
                SUM(TR_AMOUNT) AS SUM_AMOUNT
            FROM TRANSACTION
            WHERE TR_TYPE = 1
            GROUP BY TR_ACC

        )
);